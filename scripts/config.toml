[potential]
potential_name = "ANI2x"

[potential.core_parameter]
angle_sections = 4
maximum_interaction_radius = "5.1 angstrom"
minimum_interaction_radius = "0.8 angstrom"
number_of_radial_basis_functions = 16
maximum_interaction_radius_for_angular_features = "3.5 angstrom"
minimum_interaction_radius_for_angular_features = "0.8 angstrom"
angular_dist_divisions = 8
predicted_properties = ["per_atom_energy"]
predicted_dim = [1]

[potential.core_parameter.activation_function_parameter]
activation_function_name = "CeLU" # for the original ANI behavior please stick with CeLu since the alpha parameter is currently hard coded and might lead to different behavior when another activation function is used.

[potential.core_parameter.activation_function_parameter.activation_function_arguments]
alpha = 0.1

[potential.postprocessing_parameter]
properties_to_process = ['per_atom_energy']
[potential.postprocessing_parameter.per_atom_energy]
normalize = false
from_atom_to_molecule_reduction = true
keep_per_atom_property = true

[dataset]
dataset_name = "PHALKETHOH"
version_select = "nc_1000_v0"
num_workers = 4
pin_memory = true

[training]
number_of_epochs = 1000
remove_self_energies = true
batch_size = 16
lr = 0.5e-3
monitor = "val/per_molecule_energy/rmse"
shift_center_of_mass_to_origin = false

[training.experiment_logger]
logger_name = "tensorboard"

[training.experiment_logger.tensorboard_configuration]
save_dir = "logs"

[training.lr_scheduler]
frequency = 1
mode = "min"
factor = 0.1
patience = 10
cooldown = 5
min_lr = 1e-8
threshold = 0.1
threshold_mode = "abs"
monitor = "val/per_molecule_energy/rmse"
interval = "epoch"

[training.loss_parameter]
loss_property = ['per_molecule_energy', 'per_atom_force'] # use

[training.loss_parameter.weight]
per_molecule_energy = 0.999 #NOTE: reciprocal units
per_atom_force = 0.001

[training.early_stopping]
verbose = true
monitor = "val/per_molecule_energy/rmse"
min_delta = 0.001
patience = 50

[training.splitting_strategy]
name = "random_record_splitting_strategy"
data_split = [0.8, 0.1, 0.1]
seed = 42

[runtime]
save_dir = "test_setup"
experiment_name = "{potential_name}_{dataset_name}"
local_cache_dir = "./cache"
accelerator = "cpu"
number_of_nodes = 1
devices = 1                                         #[0,1,2,3]
checkpoint_path = "None"
simulation_environment = "PyTorch"
log_every_n_steps = 1
verbose = true
